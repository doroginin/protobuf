package generator

import (
	"strings"
	"text/template"
)

var ServerImplTemplate = &Template{
	FileName: "%s.pb.server.impl.go",
	Body: template.Must(template.New(`file`).Funcs(template.FuncMap{
		`lower`: strings.ToLower,
	}).Parse(`
// Code generated by protoc-gen-go-http-server.
// source: {{ .Source }}

package {{ .Package }}

import (
	"context"

	"github.com/doroginin/protobuf/protoc-gen-go-http-server/codec"
)

func init() { {{ range $si, $service := .Services }}
	default{{ $service.Name }}HTTPServerOptions.srv = &{{ $service.Name }}ServerImpl{}
	default{{ $service.Name }}HTTPServerOptions.cdc = &codec.RESTCodec{}
{{ end }} }

{{ range $si, $service := .Services }}

type {{ $service.Name }}ServerImpl struct {}

{{ range $hi, $handler := $service.Handlers }}
func (s *{{ $service.Name }}ServerImpl) {{ $handler.Name }}(ctx context.Context, req *{{ $handler.In }}) (*{{ $handler.Out }}, error) {
	// TODO: implement me
	return &{{ $handler.Out }}{}, nil
}
{{ end }}
{{ end }}
`))}
